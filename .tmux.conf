#######################
# ***    COLORS   *** #
########################

COLOR_CYAN="#8BE9FD"
COLOR_DARK="#6272A4"
COLOR_GREEN="#50FA7B"
COLOR_ORANGE="#FFB86C"
COLOR_PINK="#FF79C6"
COLOR_PURPLE="#BD93F9"
COLOR_RED="#FF5555"
COLOR_WHITE="#F8F8F2"
COLOR_YELLOW="#F1FA8C"

#######################
# ***    PLUGINS   *** #
########################
set -g @plugin "kristijanhusak/tmux-simple-git-status"
set -g @plugin "tmux-plugins/tmux-prefix-highlight"
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'christoomey/vim-tmux-navigator'

########################
# ***    DISPLAY   *** #
########################

# Set tmux to display in 256 colors
set -g default-terminal    "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Set border colors
set-option -g pane-border-style "fg=$COLOR_DARK"
set-option -g pane-active-border-style "fg=$COLOR_ORANGE"

# Set status line message style
set -g message-style "fg=$COLOR_PINK,bg=default"

# Set mode style (including history bar)
set -g mode-style "fg=colour228"

########################
# ***    GENERAL   *** #
########################

# Set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# Start windows numbering at 1
set -g base-index 1

# Start pane numbering at 1
setw -g pane-base-index 1

# Re-draw status window every 2 seconds
set -g status-interval 2

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# enable scroll with mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# shorten command delay
set -sg escape-time 1

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "tmux.conf source"

# Bind <prefix>- to split window horizontally
bind - split-window -v -c "#{pane_current_path}"

# Bind <prefix>\ to split window vertically
bind \ split-window -h -c "#{pane_current_path}"

# Bind <prefix>c to open new window with current directory
bind c new-window -c "#{pane_current_path}"

# Map vim movement keys as pane movement keys with prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

#########################
# ***  STATUS BAR   *** #
#########################

# Enable status bar
set-option -g status on

# Set window list to center
set -g status-justify left

# Set default bg/fg settings for status bar
set-option -g status-style default

# set-window-option -g window-status-current-format ''
setw -g automatic-rename-format "#{b:pane_current_path}"
set -g window-status-current-format "#[fg=$COLOR_GREEN]>#[bg=default,fg=$COLOR_CYAN,bold] #I:#W"
set-window-option -g window-status-current-style fg=$COLOR_GREEN,bg=default,bright

# Configure CPU plugin colors for statusline
# set -g @cpu_low_fg_color "#[fg=green]"
# set -g @cpu_medium_fg_color "#[fg=yellow]"
# set -g @cpu_high_fg_color "#[fg=red]"

# set -g @cpu_low_bg_color "#[bg=default]"
# set -g @cpu_medium_bg_color "#[bg=default]"
# set -g @cpu_high_bg_color "#[bg=default]"

# Left Status Bar: [CPU Usage]
set -g status-left "[#[fg=colour228]#S] "
set -g status-left-length 0

# Right Status Bar: [Session Name][Date][Time]
set -g status-right "#{prefix_highlight} #[fg=$COLOR_PURPLE]#{b:pane_current_path}#(~/.tmux/.git_status.sh #{simple_git_status})#[fg=$COLOR_DARK]‹#[fg=$COLOR_CYAN] %b %d %Y #[fg=$COLOR_DARK]‹#[fg=$COLOR_GREEN,bg=default]#[bg=default,fg=$COLOR_GREEN,bold]%l:%M %p #[fg=COLOR_CYAN]"
set -g status-right-length 0

# Auto-hide status bar if pane is maximized
# set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
# set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
# set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
# set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
# set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
